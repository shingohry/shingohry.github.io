[{"categories":null,"content":"iOS 26 betaのipswをiPhone 14 Proにインストールできない問題と回避方法 ","date":"2025-06-11","objectID":"/6/:0:0","tags":null,"title":"iOS 26 betaのipswをiPhone 14 Proにインストールできない問題と回避方法","uri":"/6/"},{"categories":null,"content":"問題 以下のページからiPhone 14 Pro向けのipswをダウンロードし、 https://developer.apple.com/download/#ios-restore-images-ipad-new Finderでインストールしようとしたが、互換性がないのでインストールできない旨のメッセージが表示された。 ファイル名のprefixが「iPhone15,3」なので、iPhone 14 Pro Max向けのものになってしまっている? iPhone15,3_26.0_23A5260n_Restore.ipsw ","date":"2025-06-11","objectID":"/6/:1:0","tags":null,"title":"iOS 26 betaのipswをiPhone 14 Proにインストールできない問題と回避方法","uri":"/6/"},{"categories":null,"content":"回避方法 以下のページに記載に従い、iPhoneから直接betaをインストールする。 「設定」\u003e「一般」\u003e「ソフトウェアアップデート」\u003e「ベータアップデート」の順に選択し、デベロッパベータ版を選択します。 新しいデベロッパベータ版が利用可能になり次第、「ソフトウェアアップデート」からインストールできます。 注：ベータ版ソフトウェアにアクセスするには、Apple Developer Webサイトへのサインインで使用するApple AccountでiPhoneにサインインしている必要があります。 https://developer.apple.com/jp/support/install-beta/ ","date":"2025-06-11","objectID":"/6/:2:0","tags":null,"title":"iOS 26 betaのipswをiPhone 14 Proにインストールできない問題と回避方法","uri":"/6/"},{"categories":null,"content":"手順 (デベロッパモードをONにした端末を準備) Apple Developer Webサイトへのサインインで使用するApple AccountでiPhoneにサインイン 「設定」\u003e「一般」\u003e「ソフトウェアアップデート」を開くと「ベータアップデート」項目が増えているので、こちらをタップ 「ベータアップデート」を選択し、iOS 26のベータ版を選択 前の画面に戻ると、「iOS 26のベータ」が表示されているので「今すぐアップデート」をタップ ","date":"2025-06-11","objectID":"/6/:2:1","tags":null,"title":"iOS 26 betaのipswをiPhone 14 Proにインストールできない問題と回避方法","uri":"/6/"},{"categories":null,"content":"2016/6/10 初版公開の記事の改訂版が公開されました。 本文を2023年6月時点の内容に更新しています。 Git初心者でも分かるGitブランチの作成、確認、切り替え、マージ、削除の手順 本連載では、バージョン管理システム「Git」とGitのホスティングサービスの一つ「GitHub」を使うために必要な知識を基礎から解説していきます。今回は、ブランチの基本として作成、確認、切り替え、mainにマージ、削除という一連の作業をコマンドの使い方と図を交えて解説します。 ","date":"2023-08-11","objectID":"/5/:0:0","tags":null,"title":"@ITに寄稿した「Git／GitHub入門」連載の第3回の記事の改訂版が公開されました。","uri":"/5/"},{"categories":null,"content":"2016/4/26 初版公開の記事の改訂版が公開されました。 本文を2023年5月時点の内容に更新しています。 最低限押さえておきたいGitの超基本的な作業フロー、5つのコマンドまとめ 本連載では、バージョン管理システム「Git」とGitのホスティングサービスの一つ「GitHub」を使うために必要な知識を基礎から解説していきます。今回は、Gitの基本的な作業フローに登場する3つの場所について図を交えて解説し、フローごとにコマンドの使い方を紹介します。 ","date":"2023-07-05","objectID":"/4/:0:0","tags":null,"title":"@ITに寄稿した「Git／GitHub入門」連載の第2回の記事の改訂版が公開されました。","uri":"/4/"},{"categories":null,"content":" セッションURL: https://developer.apple.com/videos/play/wwdc2023/10187/ ","date":"2023-06-09","objectID":"/3/:0:0","tags":null,"title":"WWDC 23 セッション「Meet SwiftData」メモ","uri":"/3/"},{"categories":null,"content":"(1) Using the model macro ","date":"2023-06-09","objectID":"/3/:1:0","tags":null,"title":"WWDC 23 セッション「Meet SwiftData」メモ","uri":"/3/"},{"categories":null,"content":"@Modelマクロ import SwiftData @Model class Trip { var name: String var destination: String var endDate: Date var startDate: Date // relationshipを張ることもできる var bucketList: [BucketListItem]? = [] var livingAccommodation: LivingAccommodation? } @Model : スキーマを定義するためのSwiftマクロ storedプロパティは永続化されるようになる 対象にできるプロパティ string、int、float などの基本的な値の型 構造体、列挙型、およびコレクションを含むコード化可能な型など、より複雑な値型 クラスへの参照、コレクションを使って relationshipを貼れる コード例の中のbucketList, livingAccommodation ","date":"2023-06-09","objectID":"/3/:1:1","tags":null,"title":"WWDC 23 セッション「Meet SwiftData」メモ","uri":"/3/"},{"categories":null,"content":"メタデータ @Model class Trip { // @Attribute を使って 一意であるように指定 @Attribute(.unique) var name: String var destination: String var endDate: Date var startDate: Date // @Relationshipを使って、Tripが削除されると、配列の要素も削除するように指定 @Relationship(.cascade) var bucketList: [BucketListItem]? = [] var livingAccommodation: LivingAccommodation? } メタデータ(@Attribute, @Relationshipなど) を使用して、スキーマをカスタマイズできる モデリングに関する関連セッション: Model your schema with SwiftData ","date":"2023-06-09","objectID":"/3/:1:2","tags":null,"title":"WWDC 23 セッション「Meet SwiftData」メモ","uri":"/3/"},{"categories":null,"content":"(2) Working with your data Modelの操作を実行するために使用する 2 つの主要なオブジェクト ModelContainer ModelContext ","date":"2023-06-09","objectID":"/3/:2:0","tags":null,"title":"WWDC 23 セッション「Meet SwiftData」メモ","uri":"/3/"},{"categories":null,"content":"ModelContainer // 扱いたいModelを指定してContainerを生成する // Initialize with only a schema let container = try ModelContainer([Trip.self, LivingAccommodation.self]) // containerの生成例 (option指定あり) // Initialize with configurations let container = try ModelContainer( for: [Trip.self, LivingAccommodation.self], configurations: ModelConfiguration(url: URL(\"path\")) ) // SwiftUIでcontainerを使う場合はmodifierを使う import SwiftUI @main struct TripsApp: App { var body: some Scene { WindowGroup { ContentView() } .modelContainer( for: [Trip.self, LivingAccommodation.self] ) } } ModelContainer: Modelの永続化のバックエンドを提供 ","date":"2023-06-09","objectID":"/3/:2:1","tags":null,"title":"WWDC 23 セッション「Meet SwiftData」メモ","uri":"/3/"},{"categories":null,"content":"ModelContext // SwiftUIの場合: // modifierを使ってcontainerをセットアップ済みの場合はEnvironmentからModelContextを取得できる struct ContextView : View { @Environment(\\.modelContext) private var context } // SwiftUI以外の場合 let context = ModelContext(container) ModelContext: モデルへのすべての変更を監視し、それらを操作するための多くのアクションを提供 アクション: 更新の追跡、データの取得、変更の保存、変更の取り消しなど ","date":"2023-06-09","objectID":"/3/:2:2","tags":null,"title":"WWDC 23 セッション「Meet SwiftData」メモ","uri":"/3/"},{"categories":null,"content":"Predicate // predicateを作る // Predicateマクロを使ってpredicateを作れる // NSPredicateをモダンにしたやつ、型指定できる、オートコンプリート使える let today = Date() let tripPredicate = #Predicate\u003cTrip\u003e { $0.destination == \"New York\" \u0026\u0026 // 目的地がニューヨーク $0.name.contains(\"birthday\") \u0026\u0026 // 誕生日に関する旅行 $0.startDate \u003e today // 開始日が将来 } // fetchする let descriptor = FetchDescriptor\u003cTrip\u003e(predicate: tripPredicate) let trips = try context.fetch(descriptor) // fetchする (sort指定あり) let descriptor = FetchDescriptor\u003cTrip\u003e( sortBy: SortDescriptor(\\Trip.name), predicate: tripPredicate ) let trips = try context.fetch(descriptor) ","date":"2023-06-09","objectID":"/3/:2:3","tags":null,"title":"WWDC 23 セッション「Meet SwiftData」メモ","uri":"/3/"},{"categories":null,"content":"データの追加、削除、保存 var myTrip = Trip(name: \"Birthday Trip\", destination: \"New York\") // データの作成 context.insert(myTrip) // 削除 context.delete(myTrip) // 保存 try context.save() // モデル オブジェクトのプロパティ値の変更は、通常のようにプロパティ セッターを使用するのと同じくらい簡単 // Model マクロは、保存されたプロパティを変更して、ModelContext が変更を自動的に追跡し、次回の保存操作にその変更を含められるようにする @Model class Trip { @Attribute(.unique) var name: String // ... } コンテナーとコンテキスト、およびその操作の詳細に関するセッション: Dive Deeper into SwiftData ","date":"2023-06-09","objectID":"/3/:2:4","tags":null,"title":"WWDC 23 セッション「Meet SwiftData」メモ","uri":"/3/"},{"categories":null,"content":"(3) Use SwiftData with SwiftUI struct ContentView: View { // @Query プロパティ ラッパーを使用して、保存されているデータを取得 @Query(sort: \\.startDate, order: .reverse) var trips: [Trip] // ... } SwiftData は SwiftUI を念頭に置いて構築されており、組み合わせて使用するのはとても簡単 SwiftData は、モデル化されたプロパティのまったく新しい監視可能な機能をサポート (@Publishedは付与しなくて良い) SwiftUI と SwiftData を併用したアプリの構築セッション: Build an app with SwiftData ","date":"2023-06-09","objectID":"/3/:3:0","tags":null,"title":"WWDC 23 セッション「Meet SwiftData」メモ","uri":"/3/"},{"categories":null,"content":"(4) Wrap-up SwiftData は、Swift の機能に対する最上級のサポートを備えて設計された、データ管理の強力な新しいソリューション Swift の新しいマクロ システムを使用して、コードに完全に焦点を当てる @model を使用してスキーマを設定し、モデル コンテナーを使用して永続性エクスペリエンスを構成 永続化、元に戻すとやり直し、iCloud 同期、ウィジェット開発などを簡単に有効にできる SwiftUI のシームレスな統合を活用して、アプリへの SwiftData の構築をすぐに開始できる ","date":"2023-06-09","objectID":"/3/:4:0","tags":null,"title":"WWDC 23 セッション「Meet SwiftData」メモ","uri":"/3/"},{"categories":null,"content":"2016/03/31 初版公開の記事の改訂版が公開されました。 本文およびスクリーンショットを2023年4月時点の内容に更新しています。 初心者でもWindowsやmacOSでできる、Gitのインストールと基本的な使い方：こっそり始めるGit／GitHub超入門（1） 本連載では、バージョン管理システム「Git」とGitのホスティングサービスの一つ「GitHub」を使うために必要な知識を基礎から解説していきます。初回はGitを使い始めるための環境構築です。 ","date":"2023-05-17","objectID":"/2/:0:0","tags":null,"title":"@ITに寄稿した「Git／GitHub入門」連載の第1回の記事の改訂版が公開されました。","uri":"/2/"},{"categories":null,"content":"Hugo + Github Pages / Actions を使って本ブログを作りました。 ","date":"2023-04-13","objectID":"/1/:0:0","tags":null,"title":"Hugo + Github Pages / Actions を使ってブログを作る","uri":"/1/"},{"categories":null,"content":"モチベーションや条件 モチベーションや条件は以下の通りです。 モチベーション: 独立したので、 自己紹介や宣伝で使えるサイトがほしい (技術的な記事を書くかもしれない) 経歴や仕事の条件などのページも統合したい Github Actionsを使ってみたい (使ったことなかった) 条件: 記事はMarkdownで書きたい 記事を書く以外の作業はできるだけ簡単にしたい ","date":"2023-04-13","objectID":"/1/:1:0","tags":null,"title":"Hugo + Github Pages / Actions を使ってブログを作る","uri":"/1/"},{"categories":null,"content":"やったこと 以下の記事を参考にして作りました。コンパクトにまとまっていてわかりやすかったです🙏 Hugo と Github Pages でブログを作る – 三日坊主。 基本的に上記記事に沿って構築しました。 以下の一部の項目は自分の環境や好みに合わせて変更しました。 テーマは以下のものを使用 https://github.com/dillonzq/LoveIt gh-pages.yml(Actionsの設定ファイル)は一部修正 基本的に以下に記載のものに変更 (バージョン指定などが新し目になっている) https://github.com/peaceiris/actions-hugo#getting-started Setup Hugoステップでextended: trueを指定 環境構築したあとは、Markdownファイルをリポジトリにpushすれば、Actionsで静的コンテンツの生成とデプロイが行われ、記事を公開できます。 ↓設定ファイル等が最終的にどうなったかはこちらのリポジトリで確認できます。 https://github.com/shingohry/shingohry.github.io ","date":"2023-04-13","objectID":"/1/:2:0","tags":null,"title":"Hugo + Github Pages / Actions を使ってブログを作る","uri":"/1/"},{"categories":null,"content":"そのほか Aboutページに記載の仕事の条件などについては以下の記事を参考にさせていただきました🙏 もともと自営業ですが真の自営業になりました | u1tnk.log フリーランスプログラマ雑感 | blog.tai2.net ","date":"2023-04-13","objectID":"/1/:3:0","tags":null,"title":"Hugo + Github Pages / Actions を使ってブログを作る","uri":"/1/"},{"categories":null,"content":"今後やりたいこと 技術的な記事を書く 独自ドメインを割り当てる Aboutページのタイトルを左寄せにしたい (できるのか?) ","date":"2023-04-13","objectID":"/1/:3:1","tags":null,"title":"Hugo + Github Pages / Actions を使ってブログを作る","uri":"/1/"},{"categories":null,"content":"平屋 真吾 (Shingo Hiraya) フリーランス iOSアプリエンジニア できる事 iOSアプリ開発 設計 実装 テスト リリース 保守/運用 技術調査 技術選定 言語 Swift Objective-C 技術 SwiftUI、Firebase、Apple Pay、Core Location GitHub/Pull Requestベースの普通の開発 ドキュメント作成 仕様書、手順書、調査報告 何をしてきたか iOSアプリエンジニア (フリーランス) 2023/4 - 現在 iOSアプリエンジニア (@クラスメソッド株式会社) 2013/4 - 2023/3 (10年) 受託開発 案件数: 10程度 規模: 期間: 1ヶ月〜5年ぐらい チーム: 1〜9名ぐらい iOSアプリエンジニア (個人開発) 2011 - 現在 ","date":"2023-04-12","objectID":"/about/:0:0","tags":null,"title":"About","uri":"/about/"},{"categories":null,"content":"執筆 Blog Shingo Hiraya - Medium 平屋真吾 - DevelopersIO 書籍 スタートダッシュiOS 〜アプリエンジニアの必須ノウハウをサクっと押さえる：書籍案内｜技術評論社 iOSアプリエンジニア養成読本［クリエイティブな開発のための技術力／デザイン力／マインドを養う！］ - 技術評論社 寄稿 こっそり始めるGit／GitHub超入門 - ＠IT 夏休みに捗る：開発者向けiOS 9、WatchOS 2、Swift 2、Xcode 7の新機能と新しいApple Developer Programの参考情報まとめ - ＠IT 「iPhone 6／6 Plusアプリ開発入門」最新記事一覧 - ＠IT DeNAのスマホアプリのUX向上に活かされている技術とアイデア - CodeZine（コードジン） Yahoo! JAPANのスマホアプリ開発で取り入れられているUI/UXデザイン技法 - CodeZine（コードジン） ","date":"2023-04-12","objectID":"/about/:1:0","tags":null,"title":"About","uri":"/about/"},{"categories":null,"content":"資格 AWS Certified Solutions Architect - Associate (SAA) AWS Certified Developer - Associate (DVA) AWS Certified SysOps Administrator – Associate (SOA) ","date":"2023-04-12","objectID":"/about/:2:0","tags":null,"title":"About","uri":"/about/"},{"categories":null,"content":"個人でリリースしたアプリ Shingo HirayaのAppをApp Storeで 条件 フルリモート(一時的や打ち合わせで伺うのは問題無いです、東京在住) 週5日稼働 直接契約 単価 ¥6250/h 連絡先 https://twitter.com/shingohry ","date":"2023-04-12","objectID":"/about/:3:0","tags":null,"title":"About","uri":"/about/"}]